{"version":3,"sources":["constants/routes.js","component/Firebase/firebase.js","component/Firebase/context.js","component/Firebase/index.js","component/SideDrawer/SideNav.module.css","component/SideDrawer/DrawerToggle/DrawerToggle.module.css","shared/utility.js","store/actions/actionTypes.js","store/reducers/weather.js","store/reducers/auth.js","store/reducers/userData.js","component/SideDrawer/DrawerToggle/DrawToggle.js","component/Navigation/NavigationItem/NavigationItem.js","component/SideDrawer/SideNav.js","component/Session/context.js","component/comp/NavigationItem/NavigationItem.js","component/comp/Navigation.js","component/Navigation/Navigation.js","hoc/withAuthentication.js","App.js","serviceWorker.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","LANDING_PAGE","HOME","MY_CITIES","MAP","LOGIN","LOG_OUT","PASSWORD_RESET","ADMIN","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","_this","this","Object","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignInWithFacebook","facebookProvider","app","initializeApp","db","firestore","GoogleAuthProvider","FacebookAuthProvider","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","assign","context","context_withFirebase","module","exports","SideNav","hidden","DrawerToggle","updatedObject","oldObject","updatedProps","_Users_buiquang_Desktop_Weather_weatherApp_master_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","getDate","month","Date","getMonth","concat","getHours","fixedMinute","getMinutes","min","SET_INITIAL_DATA_START","SET_INITIAL_DATA_SUCCESS","SET_INITIAL_DATA_FAIL","FETCH_WEATHER_DATA_START","FETCH_WEATHER_DATA_SUCCESS","FETCH_WEATHER_DATA_FAIL","AUTH_HANDLER_START","AUTH_HANDLER_SUCCESS","AUTH_HANDLER_FAIL","LOG_OUT_HANDLER","FETCH_DATA_TO_REDUX_SUCCESS","FETCH_DATA_TO_REDUX_FAIL","GET_CITY_DATA_START","GET_CITY_DATA_SUCCESS","GET_CITY_DATA_FAIL","REMOVE_CITY_DATA","initialState","city","spinner","reducer","state","arguments","length","undefined","actions","type","actionTypes","id","value","name","temp","main","tempMin","temp_min","tempMax","temp_max","humidity","wind","weather","getWeatherData","res","token","localId","err","action","idList","listCity","values","IDs","map","el","addCity","console","log","updatedListCity","filter","removeCity","className","styles","onClick","click","NavigationItem","linkItem","navStyle","forMobile","push","localStorage","getItem","linkName","to","join","link","key","react_router_dom","exact","activeClassName","sideNavStyles","showSideNav","Navigation_NavigationItem_NavigationItem","AuthUserContext","authUser","href","activeclassname","Nav","htmlFor","component_comp_NavigationItem_NavigationItem","Navigation","showFullNav","_this2","history","DrawToggle","setState","prevState","component_comp_Navigation","event","SideDrawer_SideNav","withRouter","withAuthentication","_React$Component","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","inherits","createClass","listener","onAuthStateChanged","Provider","compose","Home","lazy","Promise","all","e","then","bind","Auth","Logout","MyCities","Maps","ResetPassword","Admin","App","listerner","component_Navigation_Navigation","react","fallback","react_router","path","Routes","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","composeEnhancers","rootReducer","combineReducers","WeatherReducer","AuthReducer","user","UserDataReducer","persistConfig","storage","stateReconciler","autoMergeLevel2","pReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","es","integration_react","loading","src_App_0","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d488d3be.chunk.js","sourcesContent":["export const LANDING_PAGE = '/';\nexport const HOME = '/home';\nexport const MY_CITIES = '/mycities';\nexport const MAP = '/map';\nexport const LOGIN = '/login';\nexport const LOG_OUT= '/logout';\nexport const PASSWORD_RESET= '/pw-reset';\nexport const ADMIN = '/admin';\n\n\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\n// const firebaseConfig = {\n//     apiKey: process.env.REACT_APP_API_KEY,\n//     authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n//     databaseURL: process.env.REACT_APP_DATABASE_URL,\n//     projectId: process.env.REACT_APP_PROJECT_ID,\n//     storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n//     messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n//     appId: process.env.REACT_APP_APP_ID\n// };\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCmfJF90oW3AVz03mtGtldBPOW37JUaTRU\",\n    authDomain: \"profound-outlet-241613.firebaseapp.com\",\n    databaseURL: \"https://profound-outlet-241613.firebaseio.com\",\n    projectId: \"profound-outlet-241613\",\n    storageBucket: \"profound-outlet-241613.appspot.com\",\n    messagingSenderId: \"177428683083\",\n    appId: \"1:177428683083:web:f30e56df9cb0ca3c\"\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(firebaseConfig);\n\n        this.auth = app.auth();\n        this.db = app.firestore();\n        this.googleProvider = new app.auth.GoogleAuthProvider();\n        this.facebookProvider = new app.auth.FacebookAuthProvider();\n    }\n\n    // AUTHENTICATION API\n\n    doCreateUserWithEmailAndPassword = (email, password) => {\n        return this.auth.createUserWithEmailAndPassword(email, password);\n    }\n\n    doSignInWithEmailAndPassword = (email, password) => {\n        return this.auth.signInWithEmailAndPassword(email, password);\n    }\n\n    doSignOut = () => this.auth.signOut();\n\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n    doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n\n    doSignInWithGoogle = () => \n        this.auth.signInWithPopup(this.googleProvider);\n\n    doSignInWithFacebook = () => \n        this.auth.signInWithPopup(this.facebookProvider);\n    // USER API\n}\n\nexport default Firebase;\n\n\n\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n        {firebase => <Component {...props} firebase={firebase}/>}\n    </FirebaseContext.Consumer>\n)\n\nexport default FirebaseContext;","import Firebase from './firebase';\nimport FirebaseContext, { withFirebase } from './context';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideNav\":\"SideNav_SideNav__1zFda\",\"hidden\":\"SideNav_hidden__2zOrE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__F1oPf\"};","export const updatedObject = (oldObject, updatedProps) => {\n    return {\n        ...oldObject,\n        ...updatedProps\n    };\n};\n\nexport const updatedArray = (oldArray, updatedElement) => {\n    return [...oldArray, updatedElement];\n}\n\nexport const getDate = () => {\n    let monthArr = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    let monthIndex = new Date().getMonth();\n    let month = monthArr[monthIndex];\n    let today = `${new Date().getDate()} ${month}, ${new Date().getHours()} : ${fixedMinute(new Date().getMinutes())}`;\n    return today;\n}\n\nexport const fixedMinute = min => {\n    if (min < 10) {\n        min = '0' + 1;\n    }\n    return min;\n}","export const SET_INITIAL_DATA = 'SET_INITIAL_DATA';\nexport const SET_INITIAL_DATA_START = 'SET_INITIAL_DATA_START';\nexport const SET_INITIAL_DATA_SUCCESS = 'SET_INITIAL_DATA_SUCCESS';\nexport const SET_INITIAL_DATA_FAIL = 'SET_INITIAL_DATA_FAIL';\n\nexport const FETCH_WEATHER_DATA = 'FETCH_WEATHER_DATA';\nexport const FETCH_WEATHER_DATA_START = 'FETCH_WEATHER_DATA_START';\nexport const FETCH_WEATHER_DATA_SUCCESS = 'FETCH_WEATHER_DATA_SUCCESS';\nexport const FETCH_WEATHER_DATA_FAIL = 'FETCH_WEATHER_DATA_FAIL';\n\nexport const AUTH_HANDLER = 'AUTH_HANDLER';\nexport const AUTH_HANDLER_START = 'AUTH_HANDLER_START';\nexport const AUTH_HANDLER_SUCCESS = 'AUTH_HANDLER_SUCCESS';\nexport const AUTH_HANDLER_FAIL = 'AUTH_HANDLER_FAIL';\n\nexport const LOG_OUT_HANDLER = 'LOG_OUT_HANDLER';\n\nexport const SAVE_DATA_HANDLER = 'SAVE_DATA_HANDLER';\n\nexport const FETCH_DATA_TO_REDUX_SUCCESS = 'SAVE_DATA_HANDLER_SUCCESS';\nexport const FETCH_DATA_TO_REDUX_FAIL = 'FETCH_DATA_TO_REDUX_FAIL';\n\nexport const GET_CITY_DATA = 'GET_CITY_DATA';\nexport const GET_CITY_DATA_START = 'GET_CITY_DATA_START';\nexport const GET_CITY_DATA_SUCCESS = 'GET_CITY_DATA_SUCCESS';\nexport const GET_CITY_DATA_FAIL = 'GET_CITY_DATA_FAIL';\n\nexport const REMOVE_CITY_DATA = 'REMOVE_CITY_DATA';\n\n","import * as actionTypes from '../actions/actionTypes';\nimport { updatedObject } from '../../shared/utility';\n\nconst initialState = {\n    city: null,\n    spinner: false\n};\n\nconst getWeatherData = (state, actions) => {\n    let city = updatedObject(state.city, {\n        id: actions.value.id, \n        name: actions.value.name, \n        temp: actions.value.main.temp, \n        tempMin: actions.value.main.temp_min,\n        tempMax: actions.value.main.temp_max,\n        humidity: actions.value.main.humidity,\n        wind: actions.value.wind,\n        weather: actions.value.weather});\n    return updatedObject(state, { city, spinner: false });\n}\n\nconst reducer = (state = initialState, actions) => {\n    switch (actions.type) {\n        case actionTypes.FETCH_WEATHER_DATA_START:\n            return updatedObject(state, { spinner: true });\n        case actionTypes.FETCH_WEATHER_DATA_SUCCESS:\n            return getWeatherData(state, actions);\n        case actionTypes.SET_INITIAL_DATA_SUCCESS:\n            return updatedObject(state, { city: actions.res, spinner: false });\n        case actionTypes.SET_INITIAL_DATA_START:\n            return updatedObject(state, { spinner: true });\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updatedObject } from '../../shared/utility';\n\nconst initialState = {\n    token: null,\n    localId: null,\n    err: null,\n    spinner: false\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_HANDLER_START:\n            return updatedObject(state, { spinner: true });\n        case actionTypes.AUTH_HANDLER_SUCCESS:\n            return updatedObject(state, { token: action.token, localId: action.localId, spinner: false });\n        case actionTypes.AUTH_HANDLER_FAIL:\n            return updatedObject(state, { err: action.err });\n        case actionTypes.LOG_OUT_HANDLER:\n            return updatedObject(state, { token: null, localId: null });\n        default:\n            return state;\n    };\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updatedObject } from '../../shared/utility';\n\nconst initialState = {\n    idList: [],\n    listCity: [],\n    spinner: false\n}\n\nconst reducer = (state = initialState, action) => {\n    const addCity = (state, action) => {\n        let idList = Object.values(action.IDs).map(el => el.id);\n        return updatedObject(state, { idList });\n    }\n\n    const removeCity = (state, action) => {\n        console.log(action.id);\n        let updatedListCity = state.listCity.filter(el => {\n            return el.id !== action.id;\n        })\n\n        console.log(updatedListCity);\n        return updatedObject(state, {listCity: updatedListCity});\n    }\n\n    switch (action.type) {\n        case actionTypes.FETCH_DATA_TO_REDUX_SUCCESS:\n            return addCity(state, action);\n        case actionTypes.GET_CITY_DATA_START:\n            return updatedObject(state, {spinner: true});\n        case actionTypes.GET_CITY_DATA_SUCCESS:\n            return updatedObject(state, {listCity: action.listCity, spinner: false});\n        case actionTypes.REMOVE_CITY_DATA:\n            return removeCity(state, action);\n        case actionTypes.LOG_OUT_HANDLER:\n            return updatedObject(state, {idList: [], listCity: []});\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\n\nimport styles from './DrawerToggle.module.css';\n\nconst DrawerToggle = (props) => (\n    <div className={styles.DrawerToggle} onClick={props.click}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n)\n\nexport default DrawerToggle;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './NavigationItem.css';\n\nconst NavigationItem = (props) => {\n    let linkItem = null;\n    let navStyle = ['NavigationItem'];\n    if (props.forMobile) {\n        navStyle.push('forMobile');\n    }\n\n    const token = localStorage.getItem('token');\n\n    if (token) {\n        linkItem = [\n            { linkName: 'Home', to: '/' },\n            { linkName: 'My cities', to: '/mycities' },\n            { linkName: 'Logout', to: '/logout' }   \n        ];\n    } else {\n        linkItem = [{ linkName: 'Login', to: '/login' }];\n    }\n\n    return (\n        <ul className={navStyle.join(' ')}>\n            {\n                linkItem.map(link => {\n                    return (\n                        <li key={link.linkName}>\n                            <NavLink to={link.to} exact activeClassName=\"active\">{link.linkName}</NavLink>\n                        </li>\n                    )\n                })\n            }\n        </ul>\n    )  \n};\n\nexport default NavigationItem;","import React from 'react';\n\nimport styles from './SideNav.module.css';\nimport NavigationItem from '../Navigation/NavigationItem/NavigationItem';\n\nconst SideNav = (props) => {\n    let sideNavStyles = [styles.SideNav];\n    if (!props.showSideNav) {\n        sideNavStyles.push(styles.hidden);\n    }\n\n    return (\n        <div className={sideNavStyles.join(' ')}>\n            <NavigationItem forMobile/>\n        </div>\n    )\n}\n\nexport default SideNav;","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\n// import { NavLink } from 'react-router-dom';\n\nimport './NavigationItem.css';\n\nconst NavigationItem = (props) => {\n    console.log(props.authUser)\n    let linkItem = null;\n\n    if (props.authUser) {\n        linkItem = [\n            { linkName: 'Home', to: '/' },\n            { linkName: 'My cities', to: '/mycities' },\n            { linkName: 'Logout', to: '/logout' }   \n        ];\n    } else {\n        linkItem = [{ linkName: 'Login', to: '/login' }];\n    }\n\n    return (\n        <ul className=\"navigation__list\">\n            {\n                linkItem.map(link => {\n                    return (\n                        <li key={link.linkName} className=\"navigation__item\">\n                            <a href={link.to} activeclassname=\"active\" className=\"navigation__link\">{link.linkName}</a>\n                        </li>\n                    )\n                })\n            }\n        </ul>\n    )  \n};\n\nexport default NavigationItem;","import React from 'react';\nimport { AuthUserContext } from '../Session/index';\n\nimport './Navigation.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst Nav = (props) => {\n    return (\n        <div className=\"navigation\">\n            <input type=\"checkbox\" className=\"navigation__checkbox\" id=\"navi-toggle\" />\n\n            <label htmlFor=\"navi-toggle\" className=\"navigation__button\">\n                <span className=\"navigation__icon\">&nbsp;</span>\n            </label>\n\n            <div className=\"navigation__background\">&nbsp;</div>\n\n            <nav className=\"navigation__nav\">\n                <AuthUserContext.Consumer>\n                    {authUser => <NavigationItem {...props} authUser={authUser}/>}\n                </AuthUserContext.Consumer>\n            </nav>\n        </div>\n    )\n}\n\nexport default Nav;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\n\n// import NavigationItem from './NavigationItem/NavigationItem';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawToggle';\nimport SideNav from '../SideDrawer/SideNav';\nimport Nav from '../comp/Navigation';\nimport './Navigation.css';\n\nclass Navigation extends Component {\n    state = {\n        showSideNav: false,\n        showFullNav: false\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"Navigation\">\n                    <div className=\"col-4-of-12\">\n                        <span className=\"Logo\" {...this.props} onClick={() => {this.props.history.push('/')}}>Weather.</span>\n                    </div>\n                    <DrawerToggle click={() => this.setState(prevState => ({showSideNav: !prevState.showSideNav}))}/>\n                    <div className=\"col-6-of-12 DesktopOnly\">\n                        <Nav showFullNav={this.state.showFullNav} click={(event) => this.setState({ showFullNav: true })} />\n                    </div>\n                </div>\n                <SideNav showSideNav={this.state.showSideNav}/>\n            </div>\n        )\n    }\n};\n\nexport default withRouter(Navigation);\n","import React from 'react';\nimport { withFirebase } from '../component/Firebase';\nimport AuthUserContext from '../component/Session/context';\nimport { compose } from 'recompose';\n\nconst withAuthentication = Component => {\n    class withAuthentication extends React.Component {\n        state = {\n            authUser: ''\n        }\n        componentDidMount () {\n            this.listener = this.props.firebase.auth.onAuthStateChanged(\n                authUser => {\n                    authUser \n                        ? this.setState({authUser})\n                        : this.setState({authUser: null});\n                }\n            )\n        }\n\n        componentWillUnmount() {\n            this.listener();\n        }\n\n        render() {\n            return (\n                <AuthUserContext.Provider value={this.state.authUser}>\n                    <Component />\n                </AuthUserContext.Provider>\n            )\n        }\n    }\n\n    return compose(\n        withFirebase\n    )(withAuthentication);\n};\n\nexport default withAuthentication;","import React, { Component, Suspense, lazy } from 'react';\nimport { Switch, Route } from 'react-router';\n\nimport Navigation from './component/Navigation/Navigation';\nimport './App.css';\nimport * as Routes from './constants/routes';\nimport { withFirebase } from './component/Firebase';\nimport { AuthUserContext } from './component/Session';\nimport withAuthentication from './hoc/withAuthentication';\n\nconst Home = lazy(() => import('./Container/Home/Home'));\nconst Auth = lazy(() => import('./Container/Auth/Auth'));\nconst Logout = lazy(() => import('./Container/Auth/Logout/Logout'));\nconst MyCities = lazy(() => import('./Container/MyCities/MyCities'));\nconst Maps = lazy(() => import('./Container/Map/Map'));\nconst ResetPassword = lazy(() => import('./component/ResetPassword/ResetPassword'));\nconst Admin = lazy(() => import('./component/Admin/Admin'));\n\nclass App extends Component {\n  state = {\n    authUser: ''\n  }\n  componentDidMount () {\n    this.listerner = this.props.firebase.auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        this.setState({ authUser });\n      } else {\n        this.setState({ authUser: null });\n      }\n    })\n  }\n\n  componentWillUnmount () {\n    this.listerner();\n  }\n\n  render() {\n    return (\n      <AuthUserContext.Provider value={this.state.authUser}>\n        <div className=\"App\">\n          <div className=\"container\">\n              <Navigation />\n          </div>\n          <div className=\"container\">\n            <Suspense fallback={<div>Loading...</div>}>\n              <Switch>\n                <Route path={Routes.LANDING_PAGE} exact component={Home}/>\n                <Route path={Routes.HOME} exact component={Home}/>\n                <Route path={Routes.MY_CITIES} component={MyCities}/>\n                <Route path={Routes.LOGIN} component={Auth}/>\n                <Route path={Routes.LOG_OUT} component={Logout}/>\n                <Route path={Routes.PASSWORD_RESET} component={ResetPassword}/>\n                <Route path={Routes.MAP} component={Maps}/>\n                <Route path={Routes.ADMIN} component={Admin}/>\n              </Switch>\n            </Suspense> \n          </div>\n        </div>\n      </AuthUserContext.Provider>\n    )\n  }\n}\n\nexport default withAuthentication(withFirebase(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport WeatherReducer from './store/reducers/weather';\nimport AuthReducer from './store/reducers/auth';\nimport UserDataReducer from './store/reducers/userData';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport thunk from 'redux-thunk';\nimport {persistReducer, persistStore} from 'redux-persist';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport storage from 'redux-persist/lib/storage';\nimport Firebase, { FirebaseContext } from './component/Firebase/index';\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n    weather: WeatherReducer,\n    auth: AuthReducer,\n    user: UserDataReducer\n})\n\nconst persistConfig = {\n    key: 'root',\n    storage: storage,\n    stateReconciler: autoMergeLevel2,\n}\n\nconst pReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(pReducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst persistor = persistStore(store);\n\nconst app = (\n        <Provider store={store}>\n            <FirebaseContext.Provider value={new Firebase()}>\n                <PersistGate loading={null} persistor={persistor}>\n                    <BrowserRouter>\n                        <App />\n                    </BrowserRouter>\n                </PersistGate> \n            </FirebaseContext.Provider>\n        </Provider>\n)\n        \nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}