{"version":3,"sources":["UI/LoginButton/LoginButton.js","UI/LineSeparator/LineSeparator.js","Container/Auth/Auth.js","../node_modules/react-aux/src/Aux.js","UI/Button/Button.js","UI/Button/Button.module.css","UI/Spinner/Spinner.js","UI/Spinner/Spinner.module.css","UI/Input/Input.js","UI/Input/Input.module.css"],"names":["LoginButton","props","style","name","push","src","react_default","a","createElement","className","onClick","click","join","alt","LineSeparator","INITIAL_STATE","controls","email","elementType","elementConfig","type","placeholder","label","value","validation","required","isEmail","valid","touched","password","minLength","isAdmin","isFormValid","goSignup","error","Auth","state","authModeHandler","_this","setState","prevState","validCheckHandler","element","updatedElement","Object","objectSpread","length","updatedObject","updatedControls","defineProperty","inputChangedHandler","event","target","submitFormHandler","preventDefault","firebase","doCreateUserWithEmailAndPassword","then","authUser","sessionStorage","setItem","user","refreshToken","uid","history","Routes","catch","doSignInWithEmailAndPassword","onChangeCheckBoxHandler","e","checked","GoogleAuthHandler","doSignInWithGoogle","token","console","log","message","FacebookAuthHandler","doSignInWithFacebook","_this2","this","input","entries","map","el","key","Input","elementtype","elementconfig","changed","errorMessage","authForm","Aux_default","onSubmit","Button","disabled","btnType","react_router_dom","to","color","fontWeight","display","padding","marginRight","UI_LineSeparator_LineSeparator","UI_LoginButton_LoginButton","spinner","Spinner","getItem","react_router","Component","withRouter","withFirebase","connect","auth","err","module","exports","children","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Button_module_css__WEBPACK_IMPORTED_MODULE_1__","_Button_module_css__WEBPACK_IMPORTED_MODULE_1___default","btnStyle","styles","Btn","Btn-primary","_Spinner_module_css__WEBPACK_IMPORTED_MODULE_1__","_Spinner_module_css__WEBPACK_IMPORTED_MODULE_1___default","spin","_Input_module_css__WEBPACK_IMPORTED_MODULE_1__","_Input_module_css__WEBPACK_IMPORTED_MODULE_1___default","InputElement","inputStyle","invalid","assign","onChange","htmlFor","inputId"],"mappings":"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","file":"static/js/7.16a50dec.chunk.js","sourcesContent":["import React from 'react';\n\nimport './LoginButton.css';\n\nconst LoginButton = (props) => {\n    let style =Â ['login-btn'];\n    if (props.name === 'Facebook') {\n        style.push('FacebookStyle')\n    } else if (props.name === 'Google') {\n        style.push('GoogleStyle')\n    }\n    // const href = `http://localhost:3001/auth/${props.linkTo}`;\n    let src = null;\n\n    if (props.name === 'Google') {\n        src = 'https://upload.wikimedia.org/wikipedia/commons/2/2d/Google_Plus_logo_2015.svg';\n    } else if (props.name === 'Facebook') {\n        src = 'https://upload.wikimedia.org/wikipedia/commons/c/c2/F_icon.svg';\n    }\n\n    return (\n        <div className='col-6-of-12' onClick={props.click}>\n            <div className={style.join(' ')}>\n                <div className=\"login-icon-wrapper\">\n                    <img className=\"login-icon-svg\" src={src} alt={props.name}/>\n                </div>\n                <p className=\"btn-text\"><b>Sign in with {props.name}</b></p>\n            </div>    \n        </div>\n    )\n}\n\nexport default LoginButton;","import React from 'react';\n\nimport './LineSeparator.css';\n\nconst LineSeparator = () => (\n    <div className=\"row\">\n        <div className=\"col-6-of-12\">\n            <div className=\"LineSeparator\">\n                Quickly sign in?\n            </div>\n        </div>\n    </div>\n);\n\nexport default LineSeparator;","import React, { Component } from 'react';\nimport { withRouter, Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport Aux from 'react-aux';\nimport { updatedObject } from '../../shared/utility';\nimport { connect } from 'react-redux';\n\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/Button';\nimport './Auth.css';\nimport * as Routes from '../../constants/routes';\nimport Spinner from '../../UI/Spinner/Spinner';\nimport { withFirebase } from '../../component/Firebase';\nimport LoginButton from '../../UI/LoginButton/LoginButton';\nimport LineSeparator from '../../UI/LineSeparator/LineSeparator';\nimport * as Roles from '../../constants/roles';\n\nconst INITIAL_STATE = {\n    controls: {\n        email: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Email'\n            },\n            label: 'Email:',\n            value: '',\n            validation: {\n                required: true,\n                isEmail: true\n            },\n            valid: false,\n            touched: false\n        },\n        password: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'password',\n                placeholder: 'Password'\n            },\n            label: 'Password:',\n            value: '',\n            validation: {\n                required: true,\n                minLength: 6\n            },\n            valid: false,\n            touched: false\n        }\n    },\n    isAdmin: false,\n    isFormValid: false,\n    goSignup: false,\n    error: null\n}\n\nclass Auth extends Component {\n    state = {...INITIAL_STATE};\n\n    authModeHandler = () => {\n        this.setState(prevState => {\n            return {\n                goSignup: !prevState.goSignup\n            };\n        });\n    }\n\n    validCheckHandler = element => {\n        let updatedElement = {...this.state.controls[element]};\n        if (updatedElement.value.length > 0) {\n            updatedElement = updatedObject(updatedElement, { valid: true })\n        }\n\n        let updatedControls = updatedObject(this.state.controls, { [element]: updatedElement });\n        let isFormValid = true;\n        for (updatedElement in updatedControls) {\n            isFormValid = updatedControls[updatedElement].valid && isFormValid;\n        };\n        this.setState({ controls: updatedControls, isFormValid});\n    }\n\n    inputChangedHandler = (event, element) => {\n        let value = event.target.value;\n        let updatedElement;\n\n        if (value.length > 0) {\n            updatedElement = updatedObject(this.state.controls[element], { valid: true, value, touched: true })\n        } else {\n            updatedElement = updatedObject(this.state.controls[element], { valid: false, value })\n        }\n\n        let updatedControls = updatedObject(this.state.controls, { [element]: updatedElement });\n        let isFormValid = true;\n        for (updatedElement in updatedControls) {\n            isFormValid = updatedControls[updatedElement].valid && isFormValid;\n        };\n        this.setState({ controls: updatedControls, isFormValid});\n    }\n\n    submitFormHandler = (event) => {\n        const email = this.state.controls.email.value;\n        const password = this.state.controls.password.value;\n        const roles = {};\n        if (this.state.isAdmin) {\n            roles[Roles.ADMIN] = Roles.ADMIN\n        }\n        event.preventDefault();\n        if (this.state.goSignup) {\n            this.props.firebase\n            .doCreateUserWithEmailAndPassword(email, password)\n            .then(authUser => {\n                sessionStorage.setItem('token', authUser.user.refreshToken);\n                sessionStorage.setItem('uid', authUser.user.uid);\n            })\n            .then(authUser => {\n                this.setState({...INITIAL_STATE});\n                this.props.history.push(Routes.HOME);\n            })\n            .catch(error => this.setState({error}));\n        } else {\n            this.props.firebase\n            .doSignInWithEmailAndPassword(email, password)\n            .then(authUser => {\n                sessionStorage.setItem('token', authUser.user.refreshToken);\n                sessionStorage.setItem('uid', authUser.user.uid);\n            })\n            .then(authUser => {\n                this.setState({...INITIAL_STATE});\n                this.props.history.push(Routes.HOME);\n            })\n            .catch(error => {\n                this.setState({error});\n            });\n        } \n    }\n\n    onChangeCheckBoxHandler = e => {\n        this.setState({ [e.target.name]: e.target.checked });\n    }\n\n    GoogleAuthHandler = () => {\n        this.props.firebase.doSignInWithGoogle().then(authUser => {\n            let uid = authUser.user.uid;\n            let token = authUser.user.refreshToken;\n            sessionStorage.setItem('uid', uid);\n            sessionStorage.setItem('token', token);\n            this.props.history.push(Routes.HOME);\n        })\n        .catch(error => {\n            console.log('Getting error', error.message)\n        })\n    }\n\n    FacebookAuthHandler = () => {\n        this.props.firebase.doSignInWithFacebook().then(authUser => {\n            console.log(authUser);\n            let uid = authUser.user.uid;\n            let token = authUser.user.refreshToken;\n            sessionStorage.setItem('uid', uid);\n            sessionStorage.setItem('token', token);\n            this.props.history.push(Routes.HOME);\n        })\n        .catch(error => {\n            console.log('Getting error', error.message)\n        })\n    }\n\n    render() {\n        const style =Â {\n            color: '#1abc9c',\n            fontWeight: '300',\n            display: 'block',\n            padding: '10px 0',\n            marginRight: '1rem'\n        }\n\n        let input = Object.entries(this.state.controls).map(el => {\n            return (\n                <div key={el[0]} className=\"row col-12-of-12\">\n                    <div className=\"col-6-of-12\">\n                        <Input \n                        valid={el[1].valid}\n                        elementtype={el[1].elementType}\n                        elementconfig={el[1].elementConfig}\n                        value={el[1].value}\n                        label={el[1].label}\n                        touched={el[1].touched}\n                        changed={event => this.inputChangedHandler(event, el[0])}/>\n                    </div>   \n                </div>\n            )\n        });\n\n        let errorMessage = (\n            <div className=\"row col-12-of-12 errorMessage\">\n                {this.state.error \n                    ? <span className=\"message\">{this.state.error.message}</span> \n                    : <span className=\"message\">Please fill the form</span>}\n            </div>\n        )\n        \n        let authForm = (\n            <Aux>\n                <div className=\"row col-6-of-12\">\n                    <h1 className=\"primary__heading title\">{this.state.goSignup === true ? 'Sign up' : 'Log in'}</h1>\n                </div>\n                {errorMessage}\n                <form className=\"Form\" onSubmit={this.submitFormHandler}>\n                    {input}\n                    <div className=\"row\">\n                        <Button disabled={!this.state.isFormValid} btnType='Btn-primary'>Submit</Button>\n                        <Button type=\"button\" btnType=\"Switch\" click={() => this.authModeHandler(this.state.goSignup)}>SWITCH TO {this.state.goSignup ? 'LOGIN' : 'SIGN UP'}</Button>  \n                        <Link to={Routes.PASSWORD_RESET} style={style}>Forget Password?</Link>\n                        {/* <label style={style}>\n                            Admin:\n                            <input \n                            type=\"checkbox\"\n                            name=\"isAdmin\"\n                            onChange={this.onChangeCheckBoxHandler}\n                            checked={this.state.isAdmin}/>\n                        </label>  */}\n                    </div>          \n                </form>\n                <LineSeparator />\n                <div className=\"row col-6-of-12\">\n                    <LoginButton click={this.GoogleAuthHandler} name=\"Google\"/>\n                    <LoginButton click={this.FacebookAuthHandler} name=\"Facebook\"/>\n                </div>    \n            </Aux>\n            \n        )\n\n        if (this.props.spinner) {\n            authForm = <Spinner />\n        }\n        \n        let token = sessionStorage.getItem('token')\n        if (token) {\n            authForm = <Redirect to=\"/\"/>\n        }\n\n        return (\n            <Aux>\n                {authForm}\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        err: state.auth.err,\n        spinner: state.auth.spinner\n    }\n}\n\n// const mapDispatchToProps = dispatch => {\n//     return {\n//         authHandler: (email, password, goSignup) => dispatch(actionCreators.authHandler(email, password, goSignup))\n//     }\n// }\n\nexport default withRouter(withFirebase(connect(mapStateToProps)(Auth)));","module.exports = function Aux(props) {\n  return props.children;\n};","import React from 'react';\n\nimport styles from './Button.module.css';\n\nconst Button = (props) => {\n    let btnStyle = [styles.Btn];\n\n    btnStyle.push(styles[props.btnType]);\n\n    if (props.disabled) {\n        btnStyle.push(styles.disabled);\n    }\n\n    return (\n        <button type={props.type} className={btnStyle.join(' ')} onClick={props.click}>{props.children}</button>\n    )\n}\n\nexport default Button;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Btn\":\"Button_Btn__3Gc_G\",\"Btn-primary\":\"Button_Btn-primary__ROT0d\",\"disabled\":\"Button_disabled__1p0kb\"};","import React from 'react';\n\nimport styles from './Spinner.module.css';\n\nconst Spinner = () => (\n    <div className={styles.Spinner}></div>\n)\n\nexport default Spinner;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__2AEm6\",\"spin\":\"Spinner_spin__1Y3QT\"};","import React from 'react';\n\nimport styles from './Input.module.css';\n\nconst Input = (props) => {\n    let InputElement = null;\n    let inputStyle = [styles.InputElement];\n\n    if (!props.valid && props.touched) {\n        inputStyle.push(styles.invalid)\n    }\n\n    switch (props.elementtype) {\n        case 'input':\n            InputElement = (\n                <div className={styles.Input}>\n                    <input \n                        className={inputStyle.join(' ')} \n                        value={props.value} \n                        onChange={props.changed} \n                        {...props.elementconfig}/>\n                    <label className={styles.label} htmlFor={props.inputId}>{props.label}</label>\n                </div>\n            )   \n            break;\n        default:\n            return InputElement;\n    };\n    return (\n        <div >\n            {InputElement}\n        </div>\n    );\n}\n\nexport default Input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputElement\":\"Input_InputElement__Ooq4A\",\"invalid\":\"Input_invalid__376Oq\",\"label\":\"Input_label__2JQJH\"};"],"sourceRoot":""}