{"version":3,"sources":["component/ResetPassword/ResetPassword.js","UI/Button/Button.js","UI/Button/Button.module.css","UI/Input/Input.js","UI/Input/Input.module.css"],"names":["INITIAL_STATE","controls","email","elementType","elementConfig","type","placeholder","value","touched","label","valid","isFormValid","error","ResetPassword","state","onChangedHandler","event","element","updatedElement","target","length","updatedObject","_this","updatedControls","Object","_Users_buiquang_Desktop_Weather_weatherApp_master_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","setState","onSubmitHandler","e","preventDefault","props","firebase","doPasswordReset","then","authUser","_Users_buiquang_Desktop_Weather_weatherApp_master_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","history","push","Routes","console","log","catch","_this2","this","errorMessage","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","className","message","style","alignItems","onSubmit","entries","map","el","_UI_Input_Input__WEBPACK_IMPORTED_MODULE_8__","elementtype","elementconfig","changed","_UI_Button_Button__WEBPACK_IMPORTED_MODULE_9__","disabled","btnType","Component","withRouter","withFirebase","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Button_module_css__WEBPACK_IMPORTED_MODULE_1__","_Button_module_css__WEBPACK_IMPORTED_MODULE_1___default","Button","btnStyle","styles","Btn","join","onClick","click","children","module","exports","Btn-primary","_Input_module_css__WEBPACK_IMPORTED_MODULE_1__","_Input_module_css__WEBPACK_IMPORTED_MODULE_1___default","Input","InputElement","inputStyle","invalid","assign","onChange","htmlFor","inputId"],"mappings":"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","file":"static/js/9.dc4b864e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/Button';\nimport { updatedObject } from '../../shared/utility';\nimport { withFirebase } from '../Firebase';\nimport { withRouter } from 'react-router';\nimport * as Routes from '../../constants/routes';\n\nconst INITIAL_STATE = {\n    controls: {\n        email: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'email',\n                placeholder: 'Email'\n            },\n            value: '',\n            touched: false,\n            label: 'Email',\n            valid: false\n        }\n    },\n    isFormValid: false,\n    error: ''\n}\n\nclass ResetPassword extends Component {\n    state = {...INITIAL_STATE};\n\n    onChangedHandler = (event, element) => {\n        let updatedElement;\n        if (event.target.value.length > 0) {\n            updatedElement = updatedObject(this.state.controls[element], {value: event.target.value, touched: true, valid: true});\n        } else {\n            updatedElement = updatedObject(this.state.controls[element], {value: event.target.value, touched: true, valid: false});\n        }\n\n        const updatedControls = updatedObject(this.state.controls, {[element]: updatedElement});\n        this.setState({controls: updatedControls});\n\n        let isFormValid = true;\n        for (updatedElement in updatedControls) {\n            isFormValid = updatedControls[updatedElement].valid && isFormValid; \n        }\n        this.setState({isFormValid});\n    }   \n\n    onSubmitHandler = e => {\n        const email = this.state.controls.email.value;\n        e.preventDefault();\n        this.props.firebase\n            .doPasswordReset(email)\n            .then(\n                authUser => {\n                    this.setState({...INITIAL_STATE});\n                    this.props.history.push(Routes.LANDING_PAGE);\n                    console.log(authUser);\n                }\n            )\n            .catch(error => this.setState({error}))\n    }\n\n    render() {\n        let errorMessage = (\n            <div className=\"col-12-of-12 errorMessage\">\n                {this.state.error \n                    ? <span className=\"message\">{this.state.error.message}</span> \n                    : <span className=\"message\">Please enter your email</span>}\n            </div>\n        )\n\n        return (\n           <div>\n                <div className=\"row col-6-of-12\">\n                    <h1 className=\"primary__heading title\">Forget Password?</h1>\n                </div>              \n                <form style={{alignItems: 'start'}} className=\"row col-6-of-12\" onSubmit={this.onSubmitHandler}>\n                    {errorMessage}\n                    {Object.entries(this.state.controls).map(el => {\n                        return (\n                            <div className=\"col-10-of-12\">\n                                <Input \n                                    elementtype={el[1].elementType}\n                                    elementconfig={el[1].elementConfig}\n                                    value={el[1].value}\n                                    changed={event => this.onChangedHandler(event, el[0])}\n                                    label={el[1].label}\n                                    valid={el[1].valid}\n                                    touched={el[1].touched}/>\n                            </div>\n                        )\n                    })} \n                    <Button disabled={!this.state.isFormValid} btnType='Btn-primary'>Submit</Button>\n                </form>\n           </div> \n        )\n    }\n}\n\nexport default withRouter(withFirebase(ResetPassword));","import React from 'react';\n\nimport styles from './Button.module.css';\n\nconst Button = (props) => {\n    let btnStyle = [styles.Btn];\n\n    btnStyle.push(styles[props.btnType]);\n\n    if (props.disabled) {\n        btnStyle.push(styles.disabled);\n    }\n\n    return (\n        <button type={props.type} className={btnStyle.join(' ')} onClick={props.click}>{props.children}</button>\n    )\n}\n\nexport default Button;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Btn\":\"Button_Btn__3Gc_G\",\"Btn-primary\":\"Button_Btn-primary__ROT0d\",\"disabled\":\"Button_disabled__1p0kb\"};","import React from 'react';\n\nimport styles from './Input.module.css';\n\nconst Input = (props) => {\n    let InputElement = null;\n    let inputStyle = [styles.InputElement];\n\n    if (!props.valid && props.touched) {\n        inputStyle.push(styles.invalid)\n    }\n\n    switch (props.elementtype) {\n        case 'input':\n            InputElement = (\n                <div className={styles.Input}>\n                    <input \n                        className={inputStyle.join(' ')} \n                        value={props.value} \n                        onChange={props.changed} \n                        {...props.elementconfig}/>\n                    <label className={styles.label} htmlFor={props.inputId}>{props.label}</label>\n                </div>\n            )   \n            break;\n        default:\n            return InputElement;\n    };\n    return (\n        <div >\n            {InputElement}\n        </div>\n    );\n}\n\nexport default Input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputElement\":\"Input_InputElement__Ooq4A\",\"invalid\":\"Input_invalid__376Oq\",\"label\":\"Input_label__2JQJH\"};"],"sourceRoot":""}